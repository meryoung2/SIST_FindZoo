<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boho">
	<select id="findAll" resultType="bohoVo">
		SELECT board_num, title, content, bdate, views, board_type_num, member_num, member_nick, boho_num, boho_pet, boho_find_loc, boho_find_date
		FROM (select rownum n, board_num, title, content, bdate, views, board_type_num, member_num, member_nick, boho_num, boho_pet, boho_find_loc, boho_find_date 
		from (SELECT b.board_num, title, content, bdate, views, board_type_num, m.member_num, member_nick, boho_num, boho_pet, boho_find_loc, boho_find_date
		FROM board b, member m, boho bh
		where board_type_num = 12 and b.member_num = m.member_num and b.board_num = bh.board_num order by board_num desc)) 
		where n BETWEEN #{start} AND #{end}
	</select>
	
	
	<select id="findAllPicture" resultType="String">
		SELECT picture_fname, board_num
		FROM (select rownum n, picture_fname, board_num
		from (SELECT p.picture_fname, b.board_num
		FROM picture p, board b
		where board_type_num = 12 and b.board_num = p.board_num ORDER BY b.board_num desc, picture_file_num ))
		where n BETWEEN #{start} AND #{end}
	</select>
	
	
	<select id="search" resultType="bohoVo">
		SELECT board_num, title, content, bdate, views, board_type_num, member_num, member_nick, boho_num, boho_pet, boho_find_loc, boho_find_date  
		FROM (SELECT rownum n, board_num, title, content, bdate, views, board_type_num, member_num, member_nick, boho_num, boho_pet, boho_find_loc, boho_find_date 
		FROM (SELECT b.board_num, title, content, bdate, views, board_type_num, m.member_num, member_nick, boho_num, boho_pet, boho_find_loc, boho_find_date 
		FROM board b, member m, boho bh
		<include refid="search_ref"/> and board_type_num = 12 and b.member_num = m.member_num and b.board_num = bh.board_num order by board_num desc))
		where n BETWEEN #{start} AND #{end}
	</select>	

	<sql id="search_ref">
		<choose>
			<!-- 작성자+제목+내용+지역 검색조건으로 게시물 검색하는 쿼리 -->
			<when test="search_option == 'all' ">
				where
					member_nick like '%'||#{keyword}||'%'
					or content like '%'||#{keyword}||'%'
					or title like '%'||#{keyword}||'%'
					or find_lost_loc like '%'||#{keyword}||'%'
			</when>
			<otherwise>
				<!-- 사용자가 지정한 조건의 검색으로 게시물 검색하는 쿼리 -->
				where ${search_option} like '%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</sql>
	
	<select id="searchPicture" resultType="String">
		SELECT picture_fname, board_num
		FROM (select rownum n, picture_fname, board_num
		from (SELECT p.picture_fname, b.board_num
		FROM picture p, board b, boho bh, member m
		<include refid="search_ref3"/> and board_type_num = 12 and b.board_num = p.board_num and bh.board_num = b.board_num and b.member_num = m.member_num ORDER BY b.board_num desc, picture_file_num))
		where n BETWEEN #{start} AND #{end}
	</select>
	
	<sql id="search_ref3">
		<choose>
			<!-- 작성자+제목+내용+지역 검색조건으로 게시물 검색하는 쿼리 -->
			<when test="search_option == 'all' ">
				where
					member_nick like '%'||#{keyword}||'%'
					or content like '%'||#{keyword}||'%'
					or title like '%'||#{keyword}||'%'
					or find_lost_loc like '%'||#{keyword}||'%'
			</when>
			<otherwise>
				<!-- 사용자가 지정한 조건의 검색으로 게시물 검색하는 쿼리 -->
				where ${search_option} like '%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</sql>
	
	<insert id="insertBoard" parameterType="bohoVo">
		insert into board(board_num,title,content,bdate,views,board_type_num,member_num) values((select nvl(max(board_num), 0)+1 from board), #{title}, #{content}, sysdate+9/24, 0, 12, ${member_num})
	</insert>
	
	<insert id="insertBoho" parameterType="bohoVo">
		insert into boho(boho_num, boho_pet, boho_find_loc, boho_find_date,board_num) values((select nvl(max(boho_num), 0)+1 from boho),#{boho_pet},#{boho_find_loc},#{boho_find_date},(select nvl(max(board_num), 0) from board))
	</insert>
	
	<insert id="insertBohoPicture1" parameterType="bohoVo">
		insert into picture(picture_file_num, picture_fname, board_num) values((select nvl(max(picture_file_num), 0)+1 from picture),#{picture_fname1},(select nvl(max(board_num), 0) from board))
	</insert>	
	<insert id="insertBohoPicture2" parameterType="bohoVo">
		insert into picture(picture_file_num, picture_fname, board_num) values((select nvl(max(picture_file_num), 0)+1 from picture),#{picture_fname2},(select nvl(max(board_num), 0) from board))
	</insert>	
	<insert id="insertBohoPicture3" parameterType="bohoVo">
		insert into picture(picture_file_num, picture_fname, board_num) values((select nvl(max(picture_file_num), 0)+1 from picture),#{picture_fname3},(select nvl(max(board_num), 0) from board))
	</insert>	
	
	<select id="getBoard" resultType="bohoVo">
  		select * from boho bh, board b, member m where bh.board_num = b.board_num and m.member_num = b.member_num and b.board_num=#{board_num}
  	</select>
  	
  	<select id="getPicture" resultType="String">
  		select picture_fname from picture p, board b where p.board_num = b.board_num and b.board_num = #{board_num} order by p.picture_file_num
  	</select>
  	
  	<select id="getPictureNum" resultType="String">
  		select picture_file_num from picture p, board b where p.board_num = b.board_num and b.board_num = #{board_num} order by picture_file_num
  	</select>
  
	<select id="totalRecord" resultType="int">
  		select count(*) from boho
	</select>
	
	<select id="searchRecord" resultType="int"> 
		SELECT count(*)
		FROM (SELECT rownum n, board_num, title, content, bdate, views, board_type_num, member_num, member_nick, boho_num, boho_pet, boho_find_loc, boho_find_date, picture_fname 
		FROM (SELECT b.board_num, title, content, bdate, views, board_type_num, m.member_num, member_nick, boho_num, boho_pet, boho_find_loc, boho_find_date, picture_fname 
		FROM board b, member m, boho bh, picture p WHERE BOARD_TYPE_NUM = 12
		AND b.member_num = m.member_num and b.board_num = bh.board_num and b.board_num = p.board_num
		ORDER BY board_num DESC))
		<include refid="search_ref2"/>
	</select>
	
	<sql id="search_ref2">
		<choose>
			<!-- 작성자+제목+내용 검색조건으로 게시물 검색하는 쿼리 -->
			<when test="search_option == 'all' ">
				where
					member_nick like '%'||#{keyword}||'%'
					or content like '%'||#{keyword}||'%'
					or title like '%'||#{keyword}||'%'
			</when>
			<otherwise>
				<!-- 사용자가 지정한 조건의 검색으로 게시물 검색하는 쿼리 -->
				where ${search_option} like '%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</sql>
	
	<update id="updateHit" parameterType="int">
	  	update board set views = views+1 where board_num = #{board_num} and board_type_num = 12
	</update>

	<update id="updateBoho" parameterType="bohoVo">
		update boho set boho_pet = #{boho_pet}, boho_find_loc = #{boho_find_loc}, boho_find_date = #{boho_find_date} where board_num = #{board_num}
	</update>
	
	<update id="updateBoard" parameterType="bohoVo">
  		update board set title=#{title},content=#{content} where board_num = #{board_num}
  	</update>
  	
  	<update id="updateBohoPicture1" parameterType="bohoVo">
  		update picture set picture_fname = #{picture_fname1} where board_num = #{board_num} and picture_file_num = #{picture_file_num1} 
  	</update>
  	
  	<update id="updateBohoPicture2" parameterType="bohoVo">
  		update picture set picture_fname = #{picture_fname2} where board_num = #{board_num} and picture_file_num = #{picture_file_num2}
  	</update>
  	
  	<update id="updateBohoPicture3" parameterType="bohoVo">
  		update picture set picture_fname = #{picture_fname3} where board_num = #{board_num} and picture_file_num = #{picture_file_num3}
  	</update>
  	
  	<delete id="deleteBoho">
  		delete boho where board_num = #{board_num}
  	</delete>
  	
  	<delete id="deleteBoard">
  		delete board where board_num = #{board_num}
  	</delete>
  	
  	<delete id="deleteBohoPicture">
  		delete picture where board_num = #{board_num}
  	</delete>
</mapper>