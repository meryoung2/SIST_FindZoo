<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	<select id="findAll" resultType="memberVo">
		select * from member
	</select>
 	
	<insert id="insert" parameterType="memberVo">
		insert into member (member_num, member_id, member_pwd, member_name, member_nick, member_phone, member_email, member_addr, member_point, member_sms, member_admin, social_num)
		values((select nvl(max(member_num) + 1, 0) from member), #{member_id}, #{member_pwd}, #{member_name}, #{member_nick},#{member_phone}, #{member_email}, #{member_addr}, 0, #{member_sms}, #{member_admin}, #{social_num})
	</insert>
	
	<select id="isMember" resultType="memberVo">
    	select * from member where member_id=#{member_id} and member_pwd=#{member_pwd}
    </select>
  
  	<select id="loginMember" resultType="memberVo">
  		select * from member where member_id=#{member_id}
  	</select>
  
	  <!-- 아이디 중복체크 -->
	  <select id="idChk" resultType="int">
	  	select count(*) from member where member_id=#{member_id}
	  </select>
	  
	   <!-- 닉네임 중복체크 -->
	  <select id="nickChk" resultType="int">
	  	select count(*) from member where member_nick=#{member_nick}
	  </select>
	  
	  <!-- 패스워드 체크 -->
	  <select id="passChk" resultType="int">
	  	select count(*) from member where member_id=#{member_id} and member_pwd=#{member_pwd}
	  </select>
	  
	   <!-- 아이디 찾기 -->
	  <select id="findId" resultType="memberVo">
	  	select member_id from member where member_name=#{member_name} and member_phone=#{member_phone}
	  </select>
	  
	  <!-- 비밀번호 재설정 -->
	  <update id="findPwd" parameterType="memberVo">
	  	update member set member_pwd = #{member_pwd} where member_name = #{member_name} and member_id=#{member_id} and member_phone = #{member_phone}
	  </update>

	




	<!-- 내 정보 상세 조회 -->
 	<select id="getMember" parameterType="int" resultType="memberVo">
 		select * from member where member_num = #{member_num}
 	</select>
 	
	<!-- 내 정보 전체 수정 -->
 	<update id="updateInfo" parameterType="memberVo">
  		update member set member_id = #{member_id}, member_name = #{member_name}, member_nick = #{member_nick}, member_phone = #{member_phone}, member_email = #{member_email}, 
  		member_addr = #{member_addr}, member_point = #{member_point}, member_sms = #{member_sms}, member_admin = #{member_admin}, social_num = #{social_num} where member_num = #{member_num}
 	</update>
 	
	<!-- 비밀번호 변경 -->
 	<update id="updatePwd" parameterType="memberVo">
  		update member set member_pwd = #{member_pwd} where member_num = #{member_num}
 	</update>
 	
	<!-- 닉네임 중복 확인 -->
 	<select id="checkNick" resultType="int">
  		select count(*) from member where member_nick = #{member_nick}
 	</select>
 
 	<!-- 회원 탈퇴(해당 회원의 정보나 게시물을 실제로 삭제하지 않고 일부 정보만 수정하여 접근을 제한) -->	
 	<update id="deleteChangeInfo" parameterType="memberVo">
 		update member set member_id = #{member_id}, member_pwd = #{member_pwd}, 
 		member_nick = #{member_nick}, member_sms = #{member_sms}  
 		where member_num = #{member_num}
 	</update>
</mapper>